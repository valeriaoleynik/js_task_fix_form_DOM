{"mappings":"ACEsB,SAAS,gBAAgB,CAAC,eAElC,OAAO,CAAC,SAAC,CAAvB,EACE,IAAI,EAAY,GAEX,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,EAAK,IAAI,CAAA,OAAA,QAAA,CAAA,GAArB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,AACC,CAAA,IAAO,EAAG,WAAW,GACvB,GAAa,EAEb,GAAa,IAAM,C,C,C,M,E,CAJlB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQL,EAAK,kBAAkB,CACrB,cACC,oBACyC,MAAA,CAA7B,EAAK,EAAE,CAAC,uBAA+B,MAAA,CAAV,EAAU,iBAItD,IAAM,EACJ,EAAU,MAAM,CAAC,GAAG,WAAW,GAAK,EAAU,KAAK,CAAC,EAEtD,CAAA,EAAK,WAAW,CAAG,CACrB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputElements = document.querySelectorAll(\".field-text\");\ninputElements.forEach(function(elem) {\n    var nameLabel = \"\";\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = elem.name[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var ch = _step.value;\n            if (ch === ch.toLowerCase()) nameLabel += ch;\n            else nameLabel += \" \" + ch;\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    elem.insertAdjacentHTML(\"beforebegin\", \"\\n    <label for=\".concat(elem.id, \" class=field-label>\").concat(nameLabel, \"</label>\\n  \"));\n    var namePlaceholder = nameLabel.charAt(0).toUpperCase() + nameLabel.slice(1);\n    elem.placeholder = namePlaceholder;\n});\n\n//# sourceMappingURL=index.63448639.js.map\n","'use strict';\n\nconst inputElements = document.querySelectorAll('.field-text');\n\ninputElements.forEach((elem) => {\n  let nameLabel = '';\n\n  for (const ch of elem.name) {\n    if (ch === ch.toLowerCase()) {\n      nameLabel += ch;\n    } else {\n      nameLabel += ' ' + ch;\n    }\n  }\n\n  elem.insertAdjacentHTML(\n    'beforebegin',\n    `\n    <label for=${elem.id} class=field-label>${nameLabel}</label>\n  `,\n  );\n\n  const namePlaceholder =\n    nameLabel.charAt(0).toUpperCase() + nameLabel.slice(1);\n\n  elem.placeholder = namePlaceholder;\n});\n"],"names":["document","querySelectorAll","forEach","elem","nameLabel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","name","Symbol","iterator","next","done","ch","value","toLowerCase","err","return","insertAdjacentHTML","concat","id","namePlaceholder","charAt","toUpperCase","slice","placeholder"],"version":3,"file":"index.63448639.js.map"}